{"version":3,"sources":["redux/action_types.js","redux/reducers/login_reducer.js","redux/reducers/product_reducer.js","redux/reducers/category_reducer.js","redux/reducers/index.js","redux/reducers/title_reducer.js","redux/store.js","config/menu_config.jsx","containers/admin/left_nav/left_nav.jsx","redux/action_creators/title_action.js","static/images/tx.jpg","containers/admin/header/header.jsx","redux/action_creators/login_action.js","api/myAxios.js","config/index.js","api/index.js","containers/admin/time_weather/time_weather.jsx","components/home/home.jsx","containers/category/category.jsx","redux/action_creators/category_action.js","containers/product/product.jsx","redux/action_creators/product_action.js","containers/product/detail.jsx","containers/product/picture_wall.jsx","containers/product/rich_text_editor.jsx","containers/product/add_update.jsx","containers/user/user.jsx","containers/role/role.jsx","components/bar/bar.jsx","components/line/line.jsx","components/pie/pie.jsx","static/images/logo.png","containers/admin/admin.jsx","containers/login/login.jsx","components/not-found/not_found.jsx","App.js","index.js"],"names":["USER_IS_LOGINED","USER_IS_LOGOUTED","SAVE_TITLE","CLEAR_TITLE","SAVE_PRODUCT_LIST","SAVE_CATEGORY_INFO","user","JSON","parse","localStorage","getItem","token","initState","isLogin","combineReducers","userInfo","preState","action","type","data","title","productList","categoryInfo","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","menuList","key","icon","HomeOutlined","path","AppstoreAddOutlined","children","UnorderedListOutlined","ToolOutlined","UserSwitchOutlined","SafetyCertificateOutlined","AreaChartOutlined","BarChartOutlined","LineChartOutlined","PieChartOutlined","SubMenu","Item","LeftNav","connect","state","saveTitle","value","withRouter","isHaveAuth","menu_item","props","username","menus","role","some","child_menu_item","indexOf","find","item","createMenu","target","map","onClick","to","pathname","this","location","selectedKeys","split","reverse","defaultOpenKeys","splice","mode","theme","Component","confirm","Header","deleteUserInfo","removeItem","clearTitle","isFull","logOut","ExclamationCircleOutlined","content","cancelText","okText","onOk","fullScreenHandle","screenfull","toggle","on","setState","className","size","React","createElement","FullscreenExitOutlined","FullscreenOutlined","src","logo","PoweroffOutlined","style","fontSize","instance","axios","create","timeout","interceptors","request","use","config","NProgress","start","store","getState","headers","Authorization","method","toLowerCase","qs","stringify","response","done","error","status","dispatch","message","Promise","BASE_URL","getWeather","get","postLogin","values","post","getCategoryList","postCategoryAdd","categoryName","postCategoryUpdate","categoryId","getProductList","pageNum","pageSize","postProductStateUpdate","productId","getSearchProductList","searchType","keyWord","getProductInfo","postDeleteImage","name","postProductAdd","desc","price","detail","imgs","postProductUpdate","_id","getRoleList","postAddRole","roleName","postUpdateRole","auth_name","auth_time","Date","now","getUserList","postAddUser","userObj","postUpdateUser","postDeleteUser","userId","TimeAndWeather","date","dayjs","format","weather","fxLink","text","temp","weatherInfo","a","result","code","timerID","setInterval","clearInterval","href","rel","alt","Home","Category","saveCategoryInfo","categoryList","visible","modalType","isLoading","currentUpdatingCategory","formRef","createRef","getCategory","msg","showModalAdd","showModalUpdate","current","setFieldsValue","handleOk","submit","handleCancel","resetFields","toAdd","categoryObj","unshift","success","toUpdate","onFinish","onFinishFailed","warn","columns","dataIndex","render","width","align","extra","PlusCircleOutlined","dataSource","bordered","rowKey","pagination","showQuickJumper","loading","onCancel","ref","rules","required","placeholder","Option","Product","saveProductlist","total","getProducts","isSearch","list","searchInputChange","e","trim","changeProductState","height","history","push","defaultValue","onChange","margin","allowClear","SearchOutlined","defaultPageSize","Detail","currentProduct","getCategoryName","category","getProduct","match","params","length","LeftCircleOutlined","goBack","index","dangerouslySetInnerHTML","__html","getBase64","file","resolve","reject","reader","FileReader","readAsDataURL","onload","onerror","PicturesWall","previewVisible","previewImage","previewTitle","fileList","getImgNameList","forEach","setFileList","uid","url","handlePreview","preview","originFileObj","substring","lastIndexOf","handleChange","uploadButton","PlusOutlined","marginTop","marginLeft","listType","onPreview","footer","RichTextEditor","editorState","EditorState","createEmpty","getRichText","draftToHtml","convertToRaw","getCurrentContent","setRichText","html","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","createWithContent","onEditorStateChange","editorStyle","border","paddingLeft","lineHeight","minHeight","AddAndUpdate","productInfo","operaType","picturesWall","richTextEditor","getProductById","replace","warning","labelCol","flex","labelAlign","wrapperCol","lg","label","addonAfter","prefix","MoneyCollectOutlined","color","initialValue","htmlType","User","userFormRef","isShowModal","userList","roleList","currentUserId","getUsers","users","roles","addAndUpdateUser","deleteUser","create_time","role_id","password","span","max","min","pattern","Role","addRoleFormRef","isAddRole","isSetAuth","treeData","checkedKeys","currentId","getRoles","addRole","showSetAuth","currentRole","setAuthHandleOk","checkable","onCheck","defaultExpandAll","LinkOutlined","showIcon","Bar","sales","inventorys","getOption","tooltip","legend","xAxis","yAxis","series","update","sale","inventory","option","Line","Pie","subtext","x","trigger","formatter","orient","left","radius","center","itemStyle","emphasis","shadowBlur","shadowOffsetX","shadowColor","getOption2","backgroundColor","top","textStyle","visualMap","show","inRange","colorLightness","sort","b","roseType","normal","labelLine","lineStyle","smooth","length2","animationType","animationEasing","animationDelay","idx","Math","random","Footer","Sider","Content","Admin","titlefromredux","collapsed","onCollapse","getTitleFromMenu","pathKey","Array","tmp","citem","collapsible","visibility","ClusterOutlined","component","exact","Login","saveUserInfo","remember","setItem","pwdValidator","rule","callback","test","forgetpwd","preventDefault","initialValues","UserOutlined","validator","LockOutlined","valuePropName","noStyle","NotFound","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.89370a41.chunk.js","sourcesContent":["export const USER_IS_LOGINED = 'user_is_logined';\r\nexport const USER_IS_LOGOUTED = 'user_is_logouted';\r\nexport const SAVE_TITLE = 'save_title';\r\nexport const CLEAR_TITLE = 'clear_title';\r\nexport const SAVE_PRODUCT_LIST = 'save_product_list';\r\nexport const SAVE_CATEGORY_INFO = 'save_category_info';\r\n","import {\r\n    USER_IS_LOGINED,\r\n    USER_IS_LOGOUTED\r\n} from '../action_types.js';\r\n\r\nlet user = JSON.parse(localStorage.getItem('user'));\r\nlet token = localStorage.getItem('token');\r\n\r\nlet initState = {\r\n    user: user || {},\r\n    token: token || '',\r\n    isLogin: user && token ? true : false\r\n};\r\n\r\nexport default function LoginAndLogoutReducer(preState = initState, action) {\r\n    let {\r\n        type,\r\n        data\r\n    } = action\r\n    let newState\r\n    switch (type) {\r\n        case USER_IS_LOGINED:\r\n            let {\r\n                user, token\r\n            } = data;\r\n            newState = {\r\n                user,\r\n                token,\r\n                isLogin: true\r\n            }\r\n            return newState;\r\n        case USER_IS_LOGOUTED:\r\n            newState = {\r\n                user: {},\r\n                token: '',\r\n                isLogin: false\r\n            }\r\n            return newState;\r\n        default:\r\n            return preState;\r\n    }\r\n}","import {\r\n    SAVE_PRODUCT_LIST\r\n} from '../action_types.js';\r\n\r\n\r\nlet initState = [];\r\n\r\nexport default function SaveProductListReducer(preState = initState, action) {\r\n    let {\r\n        type,\r\n        data\r\n    } = action\r\n    let newState\r\n    switch (type) {\r\n        case SAVE_PRODUCT_LIST:\r\n            newState = [...data];\r\n            return newState;\r\n        default:\r\n            return preState;\r\n    }\r\n}","import {\r\n    SAVE_CATEGORY_INFO\r\n} from '../action_types.js';\r\n\r\n\r\nlet initState = [];\r\n\r\nexport default function SaveCategoryInfoReducer(preState = initState, action) {\r\n    let {\r\n        type,\r\n        data\r\n    } = action\r\n    let newState\r\n    switch (type) {\r\n        case SAVE_CATEGORY_INFO:\r\n            newState = [...data];\r\n            return newState;\r\n        default:\r\n            return preState;\r\n    }\r\n}","import {\r\n    combineReducers\r\n} from 'redux'\r\nimport userInfo from './login_reducer'\r\nimport title from './title_reducer'\r\nimport productList from './product_reducer'\r\nimport categoryInfo from './category_reducer'\r\n\r\n\r\nexport default combineReducers({\r\n    userInfo,\r\n    title,\r\n    productList,\r\n    categoryInfo\r\n})","import {\r\n    SAVE_TITLE,\r\n    CLEAR_TITLE\r\n} from '../action_types.js';\r\n\r\n\r\nlet initState = '';\r\n\r\nexport default function SaveAndClearTitleReducer(preState = initState, action) {\r\n    let {\r\n        type,\r\n        data\r\n    } = action\r\n    let newState\r\n    switch (type) {\r\n        case SAVE_TITLE:\r\n            newState = data;\r\n            return newState;\r\n        case CLEAR_TITLE:\r\n            newState = '';\r\n            return newState;\r\n        default:\r\n            return preState;\r\n    }\r\n}","import {createStore,applyMiddleware} from 'redux'\r\n\r\nimport reducers from './reducers'\r\n\r\nimport thunk from 'redux-thunk'\r\n//引入redux-devtools-extension，用于支持redux开发者调试工具的运行\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nexport default createStore(reducers,composeWithDevTools(applyMiddleware(thunk)));\r\n","import {\n  HomeOutlined,\n  AppstoreAddOutlined,\n  UnorderedListOutlined,\n  ToolOutlined,\n  UserSwitchOutlined,\n  SafetyCertificateOutlined,\n  AreaChartOutlined,\n  BarChartOutlined,\n  LineChartOutlined,\n  PieChartOutlined,\n} from '@ant-design/icons'\n\nexport const menuList = [\n  {\n    title: '首页', // 菜单标题名称\n    key: 'home', // 对应的path\n    icon: <HomeOutlined />, // 图标名称\n    path: '/admin/home', //对应路径\n  },\n  {\n    title: '商品',\n    key: 'prod_about',\n    icon: <AppstoreAddOutlined />,\n    children: [\n      // 子菜单列表\n      {\n        title: '分类管理',\n        key: 'category',\n        icon: <UnorderedListOutlined />,\n        path: '/admin/prod_about/category',\n      },\n      {\n        title: '商品管理',\n        key: 'product',\n        icon: <ToolOutlined />,\n        path: '/admin/prod_about/product',\n      },\n    ],\n  },\n\n  {\n    title: '用户管理',\n    key: 'user',\n    icon: <UserSwitchOutlined />,\n    path: '/admin/user',\n  },\n  {\n    title: '角色管理',\n    key: 'role',\n    icon: <SafetyCertificateOutlined />,\n    path: '/admin/role',\n  },\n\n  {\n    title: '图形图表',\n    key: 'charts',\n    icon: <AreaChartOutlined />,\n    children: [\n      {\n        title: '柱形图',\n        key: 'bar',\n        icon: <BarChartOutlined />,\n        path: '/admin/charts/bar',\n      },\n      {\n        title: '折线图',\n        key: 'line',\n        icon: <LineChartOutlined />,\n        path: '/admin/charts/line',\n      },\n      {\n        title: '饼图',\n        key: 'pie',\n        icon: <PieChartOutlined />,\n        path: '/admin/charts/pie',\n      },\n    ],\n  },\n]\n\n","import React, { Component } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { Menu } from 'antd'\r\nimport { CreatSaveTitleAction } from '../../../redux/action_creators/title_action'\r\nimport { menuList } from '../../../config/menu_config.jsx'\r\nconst { SubMenu, Item } = Menu\r\n\r\n@connect((state) => ({ user: state.userInfo.user }), {\r\n  saveTitle: CreatSaveTitleAction,\r\n})\r\n@withRouter\r\nclass LeftNav extends Component {\r\n  isHaveAuth = (menu_item) => {\r\n    const { username, role } = this.props.user\r\n    const { menus } = role\r\n    if (username === 'admin' || username === 'zhanghuanchun') {\r\n      return true\r\n    } else if (!menu_item.children) {\r\n      return menus.find((item) => item === menu_item.key)\r\n    } else if (menu_item.children) {\r\n      return menu_item.children.some(\r\n        (child_menu_item) => menus.indexOf(child_menu_item.key) !== -1\r\n      )\r\n    }\r\n  }\r\n\r\n  createMenu = (target) => {\r\n    return target.map((item) => {\r\n      if (this.isHaveAuth(item)) {\r\n        if (item.children) {\r\n          return (\r\n            <SubMenu key={item.key} icon={item.icon} title={item.title}>\r\n              {this.createMenu(item.children)}\r\n            </SubMenu>\r\n          )\r\n        } else {\r\n          return (\r\n            <Item\r\n              key={item.key}\r\n              icon={item.icon}\r\n              onClick={() => {\r\n                this.props.saveTitle(item.title)\r\n              }}\r\n            >\r\n              <Link to={item.path}>{item.title}</Link>\r\n            </Item>\r\n          )\r\n        }\r\n      } else {\r\n        return null\r\n      }\r\n    })\r\n  }\r\n  render() {\r\n    let { pathname } = this.props.location\r\n    if(pathname==='/admin') pathname='/admin/home'\r\n    // console.log('--rednder--', pathname.split('/').reverse()[0])\r\n    return (\r\n      <Menu\r\n        selectedKeys={\r\n          pathname.split('/').indexOf('product') === -1\r\n            ? pathname.split('/').reverse()[0]\r\n            : 'product'\r\n        }\r\n        defaultOpenKeys={pathname.split('/').splice(2)}\r\n        mode=\"inline\"\r\n        theme=\"dark\"\r\n      >\r\n        {this.createMenu(menuList)}\r\n      </Menu>\r\n    )\r\n  }\r\n}\r\nexport default LeftNav\r\n","import {\r\n    SAVE_TITLE,\r\n    CLEAR_TITLE\r\n} from '../action_types'\r\nexport function CreatSaveTitleAction(value) {\r\n    return {\r\n        type: SAVE_TITLE,\r\n        data: value\r\n    }\r\n}\r\n\r\nexport function CreatClearTitleAction() {\r\n    return {\r\n        type: CLEAR_TITLE\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/tx.103e189f.jpg\";","import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { Modal, Button, Avatar } from 'antd'\r\nimport {\r\n  FullscreenOutlined,\r\n  FullscreenExitOutlined,\r\n  ExclamationCircleOutlined,\r\n  PoweroffOutlined,\r\n} from '@ant-design/icons'\r\nimport { connect } from 'react-redux'\r\nimport screenfull from 'screenfull'\r\nimport { CreateDelUserInfoFromStateAction } from '../../../redux/action_creators/login_action'\r\nimport { CreatClearTitleAction } from '../../../redux/action_creators/title_action'\r\nimport logo from '../../../static/images/tx.jpg'\r\n\r\nimport './css/header.less'\r\nconst { confirm } = Modal\r\n@connect(\r\n  (state) => ({\r\n    userInfo: state.userInfo,\r\n  }),\r\n  {\r\n    deleteUserInfo: CreateDelUserInfoFromStateAction,\r\n    clearTitle: CreatClearTitleAction,\r\n  }\r\n)\r\n@withRouter\r\nclass Header extends Component {\r\n  state = {\r\n    isFull: false,\r\n  }\r\n  componentDidMount() {\r\n    screenfull.on('change', () => {\r\n      let isFull = !this.state.isFull\r\n      this.setState({ isFull })\r\n    })\r\n  }\r\n  logOut = () => {\r\n    let { deleteUserInfo, clearTitle } = this.props\r\n    confirm({\r\n      title: '确定退出?',\r\n      icon: <ExclamationCircleOutlined />,\r\n      content: '若退出需要重新登录',\r\n      cancelText: '取消',\r\n      okText: '确认',\r\n      onOk() {\r\n        deleteUserInfo()\r\n        clearTitle()\r\n      },\r\n    })\r\n  }\r\n\r\n  fullScreenHandle = () => {\r\n    screenfull.toggle()\r\n  }\r\n\r\n  render() {\r\n    let { isFull } = this.state\r\n    let { userInfo } = this.props\r\n\r\n    return (\r\n      <header className=\"header\">\r\n        <div className=\"header-left\">欢迎</div>\r\n        <div className=\"header-right\">\r\n          <Button\r\n            // icon={\r\n            //   isFull ? (\r\n            //     <FullscreenExitOutlined style={{ fontSize: '16px' }} />\r\n            //   ) : (\r\n            //     <FullscreenOutlined style={{ fontSize: '16px' }} />\r\n            //   )\r\n            // }\r\n            size=\"small\"\r\n            onClick={this.fullScreenHandle}\r\n          >\r\n            {React.createElement(\r\n              isFull ? FullscreenExitOutlined : FullscreenOutlined\r\n            )}\r\n          </Button>\r\n          <span className=\"username\">\r\n            <Avatar src={logo} className=\"avatar\" size={30} />\r\n            {userInfo.user.username}\r\n          </span>\r\n          <Button\r\n            className=\"logout-btn\"\r\n            type=\"link\"\r\n            onClick={this.logOut}\r\n            icon={<PoweroffOutlined style={{ fontSize: '21px' }} />}\r\n          ></Button>\r\n        </div>\r\n      </header>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header\r\n","import {\r\n    USER_IS_LOGINED,\r\n    USER_IS_LOGOUTED\r\n} from '../action_types'\r\n\r\n\r\n\r\nexport function CreateUserInfoToStateAction(value) {\r\n    let {\r\n        data,\r\n        remember\r\n    } = value;\r\n    if (remember) {\r\n        localStorage.setItem('user', JSON.stringify(data.user));\r\n        localStorage.setItem('token', data.token);\r\n    }\r\n    return {\r\n        type: USER_IS_LOGINED,\r\n        data: data\r\n    }\r\n}\r\n\r\nexport function CreateDelUserInfoFromStateAction() {\r\n    localStorage.removeItem('user')\r\n    localStorage.removeItem('token')\r\n    return {\r\n        type: USER_IS_LOGOUTED\r\n    }\r\n}","import axios from 'axios'\r\nimport qs from 'querystring'\r\nimport {\r\n    message\r\n} from 'antd'\r\nimport NProgress from 'nprogress'\r\nimport 'nprogress/nprogress.css'\r\nimport store from '../redux/store'\r\nimport {\r\n    USER_IS_LOGOUTED\r\n} from '../redux/action_types';\r\nconst instance = axios.create({\r\n    timeout: 10000,\r\n});\r\n\r\ninstance.interceptors.request.use(config => {\r\n    NProgress.start();\r\n    let {\r\n        token\r\n    } = store.getState().userInfo\r\n    if (token) {\r\n        config.headers.Authorization = 'zhc_' + token\r\n    }\r\n    let {\r\n        method\r\n    } = config;\r\n    if (method.toLowerCase() === 'post') {\r\n        let {\r\n            data\r\n        } = config;\r\n        config.data = qs.stringify(data);\r\n    }\r\n    return config;\r\n});\r\n\r\ninstance.interceptors.response.use(response => {\r\n    NProgress.done();\r\n    return response.data;\r\n}, function (error) {\r\n    NProgress.done();\r\n    if (error.response) {\r\n        if (error.response.status === 401) {\r\n            store.dispatch({\r\n                type: USER_IS_LOGOUTED\r\n            })\r\n            message.error(\"用户身份已过期，请重新登录！\")\r\n        }else if(error.response.status === 404){\r\n            message.error(\"访问资源出错,请检查路径！\")\r\n        }else if(error.response.status === 500){\r\n            message.error(\"服务器错误,请检查！\")\r\n        }\r\n    } else {\r\n        message.error('其他错误:'+error.message, 1)\r\n    }\r\n    return new Promise(() => {});\r\n});\r\n\r\nexport default instance;","// //基本路径 -生产环境\r\n// export const BASE_URL = 'http://localhost:3000'\r\n// // 天气icon 路径 前端页面发布在的哪个服务的接口上\r\n// export const WEATHER_IMG_URL = 'http://localhost:5000/images/weather-icon/s1_color/'\r\n\r\n// 开发环境\r\nexport const BASE_URL = '/api'\r\n// //天气icon 路径 前端页面发布在的哪个服务的接口上\r\nexport const WEATHER_IMG_URL = '/images/weather-icon/s1_color/'\r\n\r\n// 接口AK\r\nexport const WEATHER_AK = 'f23080321ff5443e9849769f5d816c94'\r\nexport const LOCATION_ID = '101181601' //驻马店，可以通过api获取其他城市 101010100\r\n// export const LOCATION_ID = '101010100'\r\n// 表格每页展示条数\r\nexport const PAGE_SIZE = 5;","import instance from './myAxios'\r\nimport {\r\n    BASE_URL,\r\n    LOCATION_ID,\r\n    WEATHER_AK,\r\n} from '../config/index'\r\n\r\n// 获取天气\r\nexport const getWeather = () => (instance.get(`https://devapi.qweather.com/v7/weather/now?location=${LOCATION_ID}&key=${WEATHER_AK}`))\r\n// 登录\r\nexport const postLogin = values => (instance.post(`${BASE_URL}/login`, values))\r\n\r\n// 获取商品分类信息\r\nexport const getCategoryList = () => (instance.get(`${BASE_URL}/manage/category/list`))\r\n\r\n// 添加商品分类\r\nexport const postCategoryAdd = ({\r\n    categoryName\r\n}) => (instance.post(`${BASE_URL}/manage/category/add`, {\r\n    categoryName\r\n}))\r\n\r\n// 更新商品分类\r\nexport const postCategoryUpdate = ({\r\n    categoryId,\r\n    categoryName\r\n}) => (instance.post(`${BASE_URL}/manage/category/update`, {\r\n    categoryId,\r\n    categoryName\r\n}))\r\n// 获取商品列表\r\nexport const getProductList = (pageNum, pageSize) => (instance.get(`${BASE_URL}/manage/product/list?pageNum=${pageNum}&pageSize=${pageSize}`))\r\n\r\n// 更新商品状态\r\nexport const postProductStateUpdate = ({\r\n    productId,\r\n    status\r\n}) => (instance.post(`${BASE_URL}/manage/product/updateStatus`, {\r\n    productId,\r\n    status\r\n}))\r\n\r\n// 搜索商品信息\r\nexport const getSearchProductList = ({\r\n    pageNum,\r\n    pageSize,\r\n    searchType,\r\n    keyWord\r\n}) => instance.get(`${BASE_URL}/manage/product/search?pageNum=${pageNum}&pageSize=${pageSize}&${searchType}=${keyWord}`)\r\n\r\n// 根据商品id获取商品信息\r\nexport const getProductInfo = (productId) => (instance.get(`${BASE_URL}/manage/product/info?productId=${productId}`))\r\n//  根据分类ID获取分类信息\r\nexport const getCategoryById = (categoryId) => (instance.get(`${BASE_URL}/manage/category/info?categoryId=${categoryId}`))\r\n\r\n// 删除图片\r\nexport const postDeleteImage = (name) => instance.post(`${BASE_URL}/manage/img/delete`, {\r\n    name\r\n})\r\n\r\n// 添加商品\r\nexport const postProductAdd = ({\r\n    categoryId,\r\n    name,\r\n    desc,\r\n    price,\r\n    detail,\r\n    imgs\r\n}) => (instance.post(`${BASE_URL}/manage/product/add`, {\r\n    categoryId,\r\n    name,\r\n    desc,\r\n    price,\r\n    detail,\r\n    imgs\r\n}))\r\n\r\n// 更新商品\r\nexport const postProductUpdate = ({\r\n    _id,\r\n    categoryId,\r\n    name,\r\n    desc,\r\n    price,\r\n    detail,\r\n    imgs\r\n}) => (instance.post(`${BASE_URL}/manage/product/update`, {\r\n    _id,\r\n    categoryId,\r\n    name,\r\n    desc,\r\n    price,\r\n    detail,\r\n    imgs\r\n}))\r\n\r\n// 获取角色列表\r\nexport const getRoleList = () => (instance.get(`${BASE_URL}/manage/role/list`))\r\n\r\n// 添加角色\r\nexport const postAddRole = (roleName) => instance.post(`${BASE_URL}/manage/role/add`, {\r\n    roleName\r\n})\r\n\r\n// 给角色设置权限\r\nexport const postUpdateRole = ({\r\n    _id,\r\n    menus,\r\n    auth_name,\r\n}) => instance.post(`${BASE_URL}/manage/role/update`, {\r\n    _id,\r\n    menus,\r\n    auth_time: Date.now(),\r\n    auth_name\r\n})\r\n\r\n// 获取用户列表\r\nexport const getUserList = () => (instance.get(`${BASE_URL}/manage/user/list`))\r\n\r\n// 添加用户\r\nexport const postAddUser = (userObj) => instance.post(`${BASE_URL}/manage/user/add`, {\r\n    ...userObj\r\n})\r\n\r\n// 修改用户\r\nexport const postUpdateUser = (userObj) => instance.post(`${BASE_URL}/manage/user/update`, {\r\n    ...userObj\r\n})\r\n\r\n\r\n// 删除用户\r\nexport const postDeleteUser = (userId) => instance.post(`${BASE_URL}/manage/user/delete`, {\r\n    userId\r\n})","import React, { Component } from 'react'\r\nimport dayjs from 'dayjs'\r\nimport {\r\n  message\r\n} from 'antd'\r\nimport { getWeather } from '../../../api'\r\nimport { WEATHER_IMG_URL } from '../../../config'\r\nimport './css/time_weather.less'\r\n\r\nexport default class TimeAndWeather extends Component {\r\n  state = {\r\n    date: dayjs().format('YYYY年 MM月DD日 HH:mm:ss'),\r\n    weather: { fxLink: '', icon: '100', text: '未知', temp: 0 },\r\n  }\r\n  componentDidMount() {\r\n    this.timerID = setInterval(() => {\r\n      this.setState({ date: dayjs().format('YYYY年 MM月DD日 HH:mm:ss') })\r\n    }, 1000)\r\n    this.weatherInfo()\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.timerID)\r\n  }\r\n  weatherInfo = async () => {\r\n    let result = await getWeather()\r\n    // 从请求返回的天气信息拿到需要的值，放入state里\r\n    if(result.code === '200'){\r\n      let weather = {\r\n        fxLink: result.fxLink,\r\n        icon: result.now.icon,\r\n        text: result.now.text,\r\n        temp: result.now.temp,\r\n      }\r\n      this.setState({ weather })\r\n    }else{\r\n      message.error('和风天气api出错,请检查配置')\r\n    }    \r\n  }\r\n  render() {\r\n    let { date, weather } = this.state\r\n    let { fxLink, icon, temp, text } = weather\r\n    return (\r\n      <div className=\"content-header-right\">\r\n        <span className=\"currentTime\">{date}</span>\r\n        <a href={fxLink} target=\"_blank\" rel=\"noreferrer\">\r\n          <img\r\n            src={WEATHER_IMG_URL + icon + '.png'}\r\n            alt=\"天气图标\"\r\n            className=\"weather-icon\"\r\n          />\r\n        </a>\r\n        {text}&nbsp;&nbsp;&nbsp;{temp}°C\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nexport default class Home extends Component {\r\n  render() {\r\n    return <div>Home</div>\r\n  }\r\n}\r\n","// 第三方库\r\nimport React, { Component } from 'react'\r\nimport { Form, Input, Button, Card, Table, message, Modal } from 'antd'\r\nimport { PlusCircleOutlined } from '@ant-design/icons'\r\nimport { connect } from 'react-redux'\r\n\r\n// 引入的redux anctioncreator\r\nimport { CreatSaveCategoryInfoAction } from '../../redux/action_creators/category_action'\r\n// 引入的请求api\r\nimport { getCategoryList, postCategoryAdd, postCategoryUpdate } from '../../api'\r\n\r\n// 引入的默认配置\r\nimport { PAGE_SIZE } from '../../config'\r\n\r\n// 操作redux，把全部的商品分类信息，存入redux里\r\n@connect(() => ({}), { saveCategoryInfo: CreatSaveCategoryInfoAction })\r\nclass Category extends Component {\r\n  state = {\r\n    categoryList: [], //商品分类列表\r\n    visible: false, // 控制模态框是否可见\r\n    modalType: '', // 当前模态框的操作类型：增加 修改\r\n    isLoading: true, //控制页面加载\r\n    currentUpdatingCategory: {}, // 当前正在修改的商品分类\r\n  }\r\n  formRef = React.createRef()\r\n  //页面挂载后请求商品分类数据\r\n  componentDidMount() {\r\n    this.getCategory()\r\n  }\r\n\r\n  // 异步请求:向服务器数据库查找商品分类\r\n  getCategory = async () => {\r\n    let result = await getCategoryList()\r\n    const { status, data, msg } = result\r\n    if (status === 0) {\r\n      this.setState({ categoryList: data.reverse(), isLoading: false })\r\n      this.props.saveCategoryInfo(data) //请求成功，把全部的商品分类信息存入redux中\r\n    } else message.error(msg, 1)\r\n  }\r\n\r\n  // 点击添加商品分类按钮的回调\r\n  showModalAdd = () => {\r\n    this.setState({\r\n      visible: true,\r\n      modalType: 'add',\r\n    })\r\n  }\r\n\r\n  // 点击某一项修改商品分类按钮的回调\r\n  showModalUpdate = (currentUpdatingCategory) => {\r\n    this.setState(\r\n      {\r\n        visible: true,\r\n        modalType: 'update',\r\n        currentUpdatingCategory,\r\n      },\r\n      () => {\r\n        //设置模态框的状态为可见之后，调用该方法把商品分类的名字传入Input框中，如果不写在状态改变之后的回调里，那么由于setState这个函数的异步执行的，会发生找不到表单formRef的情况，原因是模态框的状态为不可见，也就是没有被挂载，\r\n        this.formRef.current.setFieldsValue({\r\n          categoryName: currentUpdatingCategory.name,\r\n        })\r\n      }\r\n    )\r\n    // setTimeout(() => {\r\n    //   this.formRef.current.setFieldsValue({\r\n    //     categoryName: currentUpdatingCategory.name,\r\n    //   })\r\n    // })\r\n  }\r\n\r\n  //点击模态框确认按钮的回调\r\n  handleOk = () => {\r\n    this.formRef.current.submit()\r\n  }\r\n\r\n  //点击模态框取消按钮的回调 包括点击右上角的×号或者点击其他地方进行隐藏模态框\r\n  handleCancel = () => {\r\n    this.formRef.current.resetFields()\r\n    this.setState({\r\n      visible: false,\r\n    })\r\n  }\r\n\r\n  // 异步请求:向服务器数据库添加商品分类\r\n  toAdd = async (categoryObj) => {\r\n    let result = await postCategoryAdd(categoryObj)\r\n    const { status, data, msg } = result\r\n    if (status === 0) {\r\n      let categoryList = [...this.state.categoryList]\r\n      categoryList.unshift(data)\r\n      this.setState({ categoryList, visible: false })\r\n      this.formRef.current.resetFields()\r\n      message.success('添加分类成功！', 1)\r\n    } else message.error(msg, 1)\r\n  }\r\n\r\n  // 异步请求:向服务器数据库修改商品分类\r\n  toUpdate = async (categoryObj) => {\r\n    let result = await postCategoryUpdate(categoryObj)\r\n    const { status, msg } = result\r\n    if (status === 0) {\r\n      message.success('更新商品分类成功!', 1)\r\n      this.getCategory()\r\n      this.formRef.current.resetFields() //['categoryName']\r\n      this.setState({ visible: false })\r\n    } else message.error(msg, 1)\r\n  }\r\n\r\n  // 输入框提交校验成功之后的回调\r\n  onFinish = (values) => {\r\n    // console.log('Received values of form: ', values)\r\n    let { modalType, currentUpdatingCategory } = this.state\r\n    if (modalType === 'add') {\r\n      this.toAdd(values)\r\n    }\r\n    if (modalType === 'update') {\r\n      this.toUpdate({\r\n        categoryId: currentUpdatingCategory._id,\r\n        categoryName: values.categoryName,\r\n      })\r\n    }\r\n  }\r\n\r\n  // 输入框提交校验失败之后的回调\r\n  onFinishFailed = () => {\r\n    message.warn('表单输入有误，请检查！', 1)\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      categoryList,\r\n      visible,\r\n      modalType,\r\n      // currentUpdatingCategory\r\n    } = this.state\r\n    // console.log('---render---', currentUpdatingCategory.name)\r\n    const columns = [\r\n      {\r\n        title: '分类名',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n      },\r\n      {\r\n        title: '操作',\r\n        // dataIndex: 'name',\r\n        key: 'operation',\r\n        render: (currentUpdatingCategory) => (\r\n          <Button\r\n            type=\"link\"\r\n            onClick={() => {\r\n              this.showModalUpdate(currentUpdatingCategory)\r\n            }}\r\n          >\r\n            修改分类\r\n          </Button>\r\n        ),\r\n        width: '25%',\r\n        align: 'center',\r\n      },\r\n    ]\r\n    return (\r\n      <div>\r\n        <Card\r\n          title=\"商品分类\"\r\n          extra={\r\n            <Button\r\n              type=\"primary\"\r\n              icon={<PlusCircleOutlined />}\r\n              onClick={this.showModalAdd}\r\n            >\r\n              添加\r\n            </Button>\r\n          }\r\n        >\r\n          <Table\r\n            dataSource={categoryList}\r\n            columns={columns}\r\n            bordered\r\n            rowKey=\"_id\"\r\n            pagination={{ pageSize: PAGE_SIZE, showQuickJumper: true }}\r\n            loading={this.state.isLoading}\r\n          />\r\n        </Card>\r\n        <Modal\r\n          title={modalType === 'add' ? '添加商品分类' : '修改商品分类'}\r\n          visible={visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          okText=\"确认\"\r\n          cancelText=\"取消\"\r\n        >\r\n          <Form\r\n            ref={this.formRef}\r\n            onFinish={this.onFinish}\r\n            onFinishFailed={this.onFinishFailed}\r\n          >\r\n            <Form.Item\r\n              name=\"categoryName\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: '商品分类内容不能为空！',\r\n                },\r\n              ]}\r\n              // initialValue={currentUpdatingCategory.name}\r\n            >\r\n              <Input placeholder=\"请输入商品分类\" />\r\n            </Form.Item>\r\n          </Form>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Category\r\n","import {\r\n    SAVE_CATEGORY_INFO\r\n} from '../action_types'\r\n\r\n\r\nexport function CreatSaveCategoryInfoAction(value) {\r\n    return {\r\n        type: SAVE_CATEGORY_INFO,\r\n        data: value\r\n    }\r\n}","// 第三方库\r\nimport React, { Component } from 'react'\r\nimport { Input, Button, Card, Table, message, Select } from 'antd'\r\nimport { PlusCircleOutlined, SearchOutlined } from '@ant-design/icons'\r\nimport { connect } from 'react-redux'\r\n//请求的api\r\nimport {\r\n  getProductList,\r\n  postProductStateUpdate,\r\n  getSearchProductList,\r\n} from '../../api'\r\n// 引入的自己组件\r\nimport { CreatSaveProductListAction } from '../../redux/action_creators/product_action'\r\n// 默认配置\r\nimport { PAGE_SIZE } from '../../config'\r\nconst { Option } = Select\r\n\r\n@connect(() => ({}), { saveProductlist: CreatSaveProductListAction })\r\nclass Product extends Component {\r\n  state = {\r\n    productList: [], //商品列表数据(分页)\r\n    current: 0, //当前在哪一页\r\n    total: 0, //一共有几页\r\n    keyWord: '', //搜索关键词\r\n    searchType: 'productName', //搜索类型\r\n    isLoading: true,\r\n  }\r\n  // 组件挂载到页面上请求商品信息\r\n  componentDidMount() {\r\n    this.getProducts()\r\n  }\r\n  // 请求商品信息的方法,包括搜索商品，页面切换\r\n  getProducts = async (current = 1) => {\r\n    let { keyWord, searchType } = this.state\r\n    // console.log(current)\r\n    let result\r\n    if (this.isSearch)      //判断是搜索后展示商品信息还是直接展示商品信息\r\n      result = await getSearchProductList({\r\n        pageNum: current,\r\n        pageSize: PAGE_SIZE,\r\n        searchType,\r\n        keyWord,\r\n      })\r\n    else result = await getProductList(current, PAGE_SIZE)\r\n    // console.log(result)\r\n    let { status, data, msg } = result\r\n    let { list, pageNum, total } = data\r\n    if (status === 0) {\r\n      this.setState({\r\n        productList: list,\r\n        current: pageNum,\r\n        total,\r\n        isLoading: false,\r\n      })\r\n      this.props.saveProductlist(list) //把请求过来的当前页码的商品列表存入rudex里\r\n    } else message.error(msg, 1)\r\n  }\r\n\r\n  // 搜索框发生改变的回调，当输入的内容为空时，重新请求全部商品信息\r\n  searchInputChange = (e) => {\r\n    let keyWord = e.target.value\r\n    this.isSearch = true\r\n    if (keyWord.trim() === '') {\r\n      this.isSearch = false\r\n      this.getProducts()\r\n    }\r\n    this.setState({ keyWord })\r\n  }\r\n  //更改商品状态的方法\r\n  changeProductState = async (item) => {\r\n    let { _id, status } = item\r\n    if (status === 1) status = 2\r\n    else status = 1\r\n    let result = await postProductStateUpdate({ productId: _id, status })\r\n    let { msg, data } = result\r\n    if (result.status === 0) {\r\n      let productList = [...this.state.productList].map((value) => {\r\n        if (value._id === _id) value.status = status\r\n        return value\r\n      })\r\n      this.setState({ productList })\r\n      message.success(data, 1)\r\n    } else message.error(msg, 1)\r\n  }\r\n  render() {\r\n    let { productList, total, current } = this.state\r\n    const dataSource = productList\r\n\r\n    const columns = [\r\n      {\r\n        title: '商品名称',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n        width: '17%',\r\n      },\r\n      {\r\n        title: '商品描述',\r\n        dataIndex: 'desc',\r\n        key: 'desc',\r\n      },\r\n      {\r\n        title: '价格',\r\n        dataIndex: 'price',\r\n        key: 'price',\r\n        render: (price) => '￥' + price,\r\n        align: 'center',\r\n        width: '9%',\r\n      },\r\n      {\r\n        title: '状态',\r\n        // dataIndex: 'status',\r\n        key: 'status',\r\n        render: (item) => {\r\n          return (\r\n            <div>\r\n              <span>{item.status === 1 ? '在售' : '已停售'}</span>\r\n              <div style={{ height: '7px' }}></div>\r\n              <Button\r\n                type={item.status === 1 ? 'danger' : 'primary'}\r\n                onClick={() => {\r\n                  this.changeProductState(item)\r\n                }}\r\n              >\r\n                {item.status === 1 ? '下架' : '上架'}\r\n              </Button>\r\n            </div>\r\n          )\r\n        },\r\n        align: 'center',\r\n        width: '11%',\r\n      },\r\n      {\r\n        title: '操作',\r\n        // dataIndex: 'opra',\r\n        key: 'opra',\r\n        render: (item) => {\r\n          return (\r\n            <div>\r\n              <Button\r\n                type=\"link\"\r\n                onClick={() => {\r\n                  // console.log(item._id);\r\n                  this.props.history.push(\r\n                    `/admin/prod_about/product/detail/${item._id}`\r\n                  )\r\n                }}\r\n              >\r\n                详情\r\n              </Button>\r\n              <br />\r\n              <Button\r\n                type=\"link\"\r\n                onClick={() => {\r\n                  this.props.history.push(\r\n                    `/admin/prod_about/product/add_update/${item._id}`\r\n                  )\r\n                }}\r\n              >\r\n                修改\r\n              </Button>\r\n            </div>\r\n          )\r\n        },\r\n        align: 'center',\r\n        width: '9%',\r\n      },\r\n    ]\r\n    return (\r\n      <div>\r\n        <Card\r\n          title={\r\n            <div>\r\n              <Select\r\n                defaultValue=\"productName\"\r\n                onChange={(searchType) => {\r\n                  this.setState({ searchType })\r\n                }}\r\n              >\r\n                <Option value=\"productName\">按名称搜索</Option>\r\n                <Option value=\"productDesc\">按描述搜索</Option>\r\n              </Select>\r\n              <Input\r\n                style={{ margin: '0px 10px', width: '20%' }}\r\n                placeholder=\"请输入搜索关键字\"\r\n                allowClear\r\n                onChange={this.searchInputChange}\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                icon={<SearchOutlined />}\r\n                onClick={() => {\r\n                  this.getProducts()\r\n                }}\r\n              >\r\n                搜索\r\n              </Button>\r\n            </div>\r\n          }\r\n          extra={\r\n            <Button\r\n              type=\"primary\"\r\n              icon={<PlusCircleOutlined />}\r\n              onClick={() => {\r\n                this.props.history.push('/admin/prod_about/product/add_update')\r\n              }}\r\n            >\r\n              添加商品\r\n            </Button>\r\n          }\r\n        >\r\n          <Table\r\n            dataSource={dataSource}\r\n            columns={columns}\r\n            bordered\r\n            rowKey=\"_id\"\r\n            loading={this.state.isLoading}\r\n            pagination={{\r\n              total: total,\r\n              defaultPageSize: PAGE_SIZE,\r\n              onChange: this.getProducts,\r\n              current: current,\r\n            }}\r\n          />\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Product\r\n","import {\r\n    SAVE_PRODUCT_LIST\r\n} from '../action_types'\r\n\r\n\r\nexport function CreatSaveProductListAction(value) {\r\n    return {\r\n        type: SAVE_PRODUCT_LIST,\r\n        data: value\r\n    }\r\n}","// 第三方库\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { List, Card, Button, message } from 'antd'\r\nimport { LeftCircleOutlined } from '@ant-design/icons'\r\n\r\n// 自己定义向服务器发出请求的api\r\nimport { getProductInfo, getCategoryList } from '../../api'\r\n// 引入的配置\r\nimport {BASE_URL} from '../../config'\r\n\r\n// 引入的样式文件\r\nimport './css/detail.less'\r\n\r\n// 与redux进行交互，取得redux保存的当前页码的商品列表 和 全部的商品分类列表\r\n@connect((state) => ({\r\n  productList: state.productList,\r\n  categoryInfo: state.categoryInfo,\r\n}))\r\nclass Detail extends Component {\r\n  state = {\r\n    currentProduct: {}, // 当前点击详情的商品对象\r\n    categoryName: '', // 当前商品的分类名字\r\n    isLoading: true, // 是否处于加载中\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { productList, match, categoryInfo } = this.props //从props 取得当前页码的商品列表，全部的商品分类信息，以及浏览器的路径信息\r\n    let productId = match.params._id // 取得由product路由传递过来的商品_id\r\n    if (productList.length > 0) {\r\n      //判断redux里是否有商品列表信息 如果有拿着_id进行遍历，如果没有向服务器再次发送请求\r\n      let currentProduct = productList.find((item) => item._id === productId)\r\n      this.categoryId = currentProduct.categoryId //把当前商品的分类id设置为实例对象的属性，以便一会根据商品分类id查找商品分类名字\r\n      this.setState({ currentProduct, isLoading: !categoryInfo.length })\r\n    } else this.getProduct(productId)\r\n    if (categoryInfo.length > 0) {\r\n      //判断redux里是否有全部的商品分类信息 如果有拿着当前商品的分类id进行查找，返回商品分类名，如果没有向服务器再次发送请求\r\n      let category = categoryInfo.find((item) => item._id === this.categoryId)\r\n      this.setState({ categoryName: category.name })\r\n    } else this.getCategoryName()\r\n  }\r\n  //向服务器发送请求全部的商品分类信息\r\n  getCategoryName = async () => {\r\n    let result = await getCategoryList()\r\n    let { status, data, msg } = result\r\n    if (status === 0) {\r\n      let category = data.find((item) => item._id === this.categoryId)\r\n      category && this.setState({ categoryName: category.name, isLoading: false })\r\n    } else message.error(msg, 1)\r\n  }\r\n\r\n  //根据商品id向服务器请求商品信息\r\n  getProduct = async (productId) => {\r\n    let result = await getProductInfo(productId)\r\n    let { status, data, msg } = result\r\n    if (status === 0) {\r\n      if(data){\r\n        this.categoryId = data.categoryId //把当前商品的分类id设置为实例对象的属性，以便一会根据商品分类id查找商品分类名字\r\n        this.setState({\r\n          currentProduct: data,\r\n        })\r\n      }\r\n    } else message.error(msg, 1)\r\n  }\r\n  render() {\r\n    let { name, desc, price, imgs, detail } = this.state.currentProduct\r\n    return (\r\n      <Card\r\n        title={\r\n          <div>\r\n            <Button\r\n              type=\"link\"\r\n              icon={<LeftCircleOutlined />}\r\n              onClick={() => {\r\n                this.props.history.goBack()\r\n              }}\r\n            >\r\n              <span>返回</span>\r\n            </Button>\r\n            <span>商品详情</span>\r\n          </div>\r\n        }\r\n      >\r\n        <List loading={this.state.isLoading}>\r\n          <List.Item>\r\n            <div className=\"prod\">\r\n              <span className=\"prod-title\">商品名称：</span>\r\n              <span>{name}</span>\r\n            </div>\r\n          </List.Item>\r\n          <List.Item>\r\n            <div className=\"prod\">\r\n              <span className=\"prod-title\">商品描述：</span>\r\n              <span>{desc}</span>\r\n            </div>\r\n          </List.Item>\r\n          <List.Item>\r\n            <div className=\"prod\">\r\n              <span className=\"prod-title\">商品价格：</span>\r\n              <span>{price}</span>\r\n            </div>\r\n          </List.Item>\r\n          <List.Item>\r\n            <div className=\"prod\">\r\n              <span className=\"prod-title\">所属分类：</span>\r\n              <span>{this.state.categoryName}</span>\r\n            </div>\r\n          </List.Item>\r\n          <List.Item>\r\n            <div className=\"prod\">\r\n              <span className=\"prod-title\">商品图片：</span>\r\n              <span>\r\n                {imgs &&\r\n                  imgs.map((item, index) => {\r\n                    return (\r\n                      <img\r\n                        key={index}\r\n                        src={`${BASE_URL}/upload/` + item}\r\n                        alt=\"商品图片\"\r\n                        style={{ width: '200px' }}\r\n                      />\r\n                    )\r\n                  })}\r\n              </span>\r\n            </div>\r\n          </List.Item>\r\n          <List.Item>\r\n            <div className=\"prod\">\r\n              <span className=\"prod-title\">商品详情：</span>\r\n              <span dangerouslySetInnerHTML={{ __html: detail }}></span>\r\n            </div>\r\n          </List.Item>\r\n        </List>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\nexport default Detail\r\n","import React, { Component } from 'react'\r\nimport { Upload, Modal, message } from 'antd'\r\nimport { PlusOutlined } from '@ant-design/icons'\r\nimport { BASE_URL } from '../../config'\r\nimport { postDeleteImage } from '../../api'\r\n\r\n//将图片变成base64编码形式\r\nfunction getBase64(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader()\r\n    reader.readAsDataURL(file)\r\n    reader.onload = () => resolve(reader.result)\r\n    reader.onerror = (error) => reject(error)\r\n  })\r\n}\r\n\r\nexport default class PicturesWall extends Component {\r\n  state = {\r\n    previewVisible: false, //是否展示预览窗\r\n    previewImage: '', //要预览的图片的URL地址或base64编码\r\n    previewTitle: '',\r\n    fileList: [], //收集好的所有上传完毕的图片名\r\n  }\r\n\r\n  getImgNameList = () => {\r\n    let result = []\r\n    this.state.fileList.forEach((item) => {\r\n      result.push(item.name)\r\n    })\r\n    return result\r\n  }\r\n\r\n  setFileList = (imgs) => {\r\n    let fileList = []\r\n    imgs.forEach((item, index) => {\r\n      fileList.push({\r\n        uid: -index,\r\n        name: item,\r\n        url: `${BASE_URL}/upload/${item}`,\r\n      })\r\n    })\r\n    this.setState({ fileList })\r\n  }\r\n\r\n  handleCancel = () => this.setState({ previewVisible: false })\r\n\r\n  handlePreview = async (file) => {\r\n    if (!file.url && !file.preview) {\r\n      file.preview = await getBase64(file.originFileObj)\r\n    }\r\n\r\n    this.setState({\r\n      previewImage: file.url || file.preview,\r\n      previewVisible: true,\r\n      previewTitle:\r\n        file.name || file.url.substring(file.url.lastIndexOf('/') + 1),\r\n    })\r\n  }\r\n\r\n  handleChange = async ({ file, fileList }) => {\r\n    if (file.status === 'done') {\r\n      // console.log(file.response.data.url)\r\n      fileList[fileList.length - 1].url = file.response.data.url\r\n      fileList[fileList.length - 1].name = file.response.data.name\r\n    }\r\n    if (file.status === 'removed') {\r\n      let result = await postDeleteImage(file.name)\r\n      const { status, msg } = result\r\n      if (status === 0) message.success('删除图片成功！', 1)\r\n      else message.error(msg, 1)\r\n    }\r\n    this.setState({ fileList })\r\n  }\r\n\r\n  render() {\r\n    const { previewVisible, previewImage, fileList, previewTitle } = this.state\r\n    const uploadButton = (\r\n      <div>\r\n        <PlusOutlined />\r\n        <div style={{ marginTop: 8 }}>Upload</div>\r\n      </div>\r\n    )\r\n    return (\r\n      <div style={{ marginLeft: '13px' }}>\r\n        <Upload\r\n          action={`${BASE_URL}/manage/img/upload`}\r\n          name=\"image\"\r\n          listType=\"picture-card\"\r\n          fileList={fileList}\r\n          onPreview={this.handlePreview}\r\n          onChange={this.handleChange}\r\n        >\r\n          {fileList.length >= 8 ? null : uploadButton}\r\n        </Upload>\r\n        <Modal\r\n          visible={previewVisible}\r\n          title={previewTitle}\r\n          footer={null}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { EditorState, convertToRaw,ContentState } from 'draft-js'\r\nimport { Editor } from 'react-draft-wysiwyg'\r\nimport draftToHtml from 'draftjs-to-html'\r\nimport htmlToDraft from 'html-to-draftjs'\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css'\r\nimport './css/rich_text_editor.less'\r\nexport default class RichTextEditor extends Component {\r\n  state = {\r\n    editorState: EditorState.createEmpty(),\r\n  }\r\n\r\n  // 自定义方法，便于add_updata组件能拿到用户所输入的商品详情信息的Html文本\r\n  getRichText = () =>\r\n    draftToHtml(convertToRaw(this.state.editorState.getCurrentContent()))\r\n\r\n  setRichText = (html)=>{\r\n    const contentBlock = htmlToDraft(html);\r\n    if (contentBlock) {\r\n      const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\r\n      const editorState = EditorState.createWithContent(contentState);\r\n      this.setState({\r\n        editorState,\r\n      });\r\n    }\r\n  }\r\n\r\n  onEditorStateChange = (editorState) => {\r\n    this.setState({\r\n      editorState,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { editorState } = this.state\r\n    return (\r\n      <div style={{ marginLeft: '13px' }}>\r\n        <Editor\r\n          editorState={editorState}\r\n          //   wrapperClassName=\"demo-wrapper\"\r\n          //   editorClassName=\"demo-editor\"  // 用户编辑框的样式\r\n          editorStyle={{\r\n            border: ' 1px solid #13c2c2',\r\n            paddingLeft: '10px',\r\n            lineHeight: '10px',\r\n            minHeight: '200px',\r\n          }}\r\n          onEditorStateChange={this.onEditorStateChange}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","// 第三方库\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Card, Button, Form, Select, Input, message } from 'antd'\r\nimport { LeftCircleOutlined, MoneyCollectOutlined } from '@ant-design/icons'\r\n\r\n// 引入自己的组件\r\nimport PicturesWall from './picture_wall'\r\nimport RichTextEditor from './rich_text_editor'\r\n\r\n// 向服务器发起请求的API\r\nimport {\r\n  getCategoryList,\r\n  postProductAdd,\r\n  getProductInfo,\r\n  postProductUpdate,\r\n} from '../../api'\r\n\r\n//解构用到的对象属性，简化代码\r\nconst { Item } = Form\r\nconst { Option } = Select\r\n\r\n// 从redux里拿全部的商品分类信息，以便展示到选择框里\r\n@connect((state) => ({\r\n  categoryInfo: state.categoryInfo,\r\n  productList: state.productList,\r\n}))\r\nclass AddAndUpdate extends Component {\r\n  state = {\r\n    categoryInfo: [], //全部的商品分类信息\r\n    productInfo: {},\r\n    operaType: 'add',\r\n  }\r\n  // 自己定义的组件的ref,便于操作组件内部的方法\r\n  picturesWall = React.createRef()\r\n  richTextEditor = React.createRef()\r\n  formRef = React.createRef()\r\n\r\n  //当页面挂载后，从props拿redux里的商品分类信息,如果有存入状态后展示到页面上，如果没有请求服务器\r\n  componentDidMount() {\r\n    let { categoryInfo, productList, match } = this.props\r\n    let productId = match.params._id\r\n    if (categoryInfo.length) this.setState({ categoryInfo })\r\n    else this.getCategory()\r\n    if (productId) {\r\n      if (productList.length > 0) {\r\n        let productInfo = productList.find((item) => item._id === productId)\r\n        this.formRef.current.setFieldsValue({ ...productInfo })\r\n        this.picturesWall.current.setFileList(productInfo.imgs)\r\n        this.richTextEditor.current.setRichText(productInfo.detail)\r\n        this.setState({ productInfo, operaType: 'update' })\r\n      } else this.getProductById(productId)\r\n    }\r\n  }\r\n  getProductById = async (productId) => {\r\n    let result = await getProductInfo(productId)\r\n    const { status, data, msg } = result\r\n    if (status === 0) {\r\n      if(data){\r\n        this.formRef.current.setFieldsValue({ ...data })\r\n        this.picturesWall.current.setFileList(data.imgs)\r\n        this.richTextEditor.current.setRichText(data.detail)\r\n        this.setState({ productInfo: data, operaType: 'update' })\r\n      }\r\n    } else message.error(msg, 1)\r\n  }\r\n\r\n  //向服务器请求全部的商品分类信息\r\n  getCategory = async () => {\r\n    let result = await getCategoryList()\r\n    let { status, data, msg } = result\r\n    if (status === 0) this.setState({ categoryInfo: data })\r\n    else message.error(msg, 1)\r\n  }\r\n\r\n  // 点击表单中提交按钮的校验成功之后的回调\r\n  onFinish = async (values) => {\r\n    let imgs = this.picturesWall.current.getImgNameList() //调用组件库里的方法，拿到用户传入的图片信息\r\n    let detail = this.richTextEditor.current.getRichText() //调用组件库里的方法，拿到用户传入的商品详情的Html\r\n    let { operaType } = this.state\r\n\r\n    let result\r\n    if (operaType === 'add') {\r\n      result = await postProductAdd({ ...values, imgs, detail }) //向服务器发送请求，保存商品信息\r\n    } else {\r\n      const _id = this.state.productInfo._id\r\n      result = await postProductUpdate({ _id, ...values, imgs, detail }) //向服务器发送请求，保存商品信息\r\n    }\r\n\r\n    const { status, msg } = result\r\n    if (status === 0) {\r\n      message.success('操作商品成功', 1)\r\n      this.props.history.replace('/admin/prod_about/product') //成功之后跳转到商品展示列表页面\r\n    } else message.error(msg, 1)\r\n  }\r\n  // 点击表单中提交按钮的校验失败之后的回调\r\n  onFinishFailed = () => {\r\n    message.warning('商品信息填写有误，请检查！')\r\n  }\r\n  render() {\r\n    let { operaType } = this.state\r\n    // console.log(name, desc, price, categoryId)\r\n    return (\r\n      <Card\r\n        title={\r\n          <div>\r\n            <Button\r\n              type=\"link\"\r\n              onClick={this.props.history.goBack}\r\n              icon={<LeftCircleOutlined />}\r\n            >\r\n              <span>返回</span>\r\n            </Button>\r\n            <span>{operaType === 'update' ? '商品修改' : '商品添加'}</span>\r\n          </div>\r\n        }\r\n      >\r\n        <Form\r\n          ref={this.formRef}\r\n          labelCol={{ flex: 'none' }}\r\n          labelAlign=\"right\"\r\n          wrapperCol={{ flex: 1, lg: 9 }}\r\n          onFinish={this.onFinish}\r\n          onFinishFailed={this.onFinishFailed}\r\n        >\r\n          <Item\r\n            label=\"商品名称\"\r\n            rules={[{ required: true, message: '请输入商品名称' }]}\r\n            name=\"name\"\r\n            // initialValue={name}\r\n          >\r\n            <Input style={{ marginLeft: '3px' }} placeholder=\"商品名称\" />\r\n          </Item>\r\n\r\n          <Item\r\n            label=\"商品描述\"\r\n            rules={[{ required: true, message: '请输入商品描述' }]}\r\n            name=\"desc\"\r\n            // initialValue={desc}\r\n          >\r\n            <Input style={{ marginLeft: '3px' }} placeholder=\"商品描述\" />\r\n          </Item>\r\n\r\n          <Item\r\n            label=\"商品价格\"\r\n            rules={[{ required: true, message: '请输入商品价格' }]}\r\n            name=\"price\"\r\n          >\r\n            <Input\r\n              placeholder=\"商品价格\"\r\n              addonAfter=\"元\"\r\n              prefix={\r\n                <MoneyCollectOutlined style={{ color: 'rgba(0,0,0,.25)' }} />\r\n              }\r\n              type=\"number\"\r\n              style={{ marginLeft: '3px' }}\r\n            />\r\n          </Item>\r\n\r\n          <Item\r\n            label=\"商品分类\"\r\n            rules={[{ required: true, message: '请选择一个分类' }]}\r\n            name=\"categoryId\"\r\n            initialValue=\"\"\r\n          >\r\n            <Select style={{ marginLeft: '3px' }}>\r\n              <Option value=\"\">请选择分类</Option>\r\n              {this.state.categoryInfo.map((item) => {\r\n                return (\r\n                  <Option key={item._id} value={item._id}>\r\n                    {item.name}\r\n                  </Option>\r\n                )\r\n              })}\r\n            </Select>\r\n          </Item>\r\n\r\n          <Item label=\"商品图片\" wrapperCol={{ lg: 14 }}>\r\n            <PicturesWall ref={this.picturesWall} />\r\n          </Item>\r\n\r\n          <Item label=\"商品详情\" wrapperCol={{ lg: 18 }}>\r\n            <RichTextEditor ref={this.richTextEditor} />\r\n          </Item>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            提交\r\n          </Button>\r\n        </Form>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\nexport default AddAndUpdate\r\n","// 引入的第三方库\r\nimport React, { Component } from 'react'\r\nimport { Form, Input, Button, Card, Table, message, Modal, Select } from 'antd'\r\nimport {\r\n  PlusCircleOutlined,\r\n  ExclamationCircleOutlined,\r\n} from '@ant-design/icons'\r\nimport dayjs from 'dayjs'\r\n// 请求的api\r\nimport {\r\n  getUserList,\r\n  postAddUser,\r\n  postDeleteUser,\r\n  postUpdateUser,\r\n} from '../../api'\r\n\r\nimport { PAGE_SIZE } from '../../config'\r\n\r\n// 解构对象 简化代码\r\nconst { confirm } = Modal\r\nconst { Item } = Form\r\nconst { Option } = Select\r\n\r\nexport default class User extends Component {\r\n  // 表单的ref\r\n  userFormRef = React.createRef()\r\n\r\n  state = {\r\n    isShowModal: false, //控制添加模态框的展示\r\n    operaType: 'add',\r\n    userList: [],\r\n    roleList: [],\r\n    currentUserId: '',\r\n  }\r\n  componentDidMount() {\r\n    this.getUsers()\r\n  }\r\n\r\n  // 数据库中查找所有用户，以及所有角色\r\n  getUsers = async () => {\r\n    let result = await getUserList()\r\n    let { status, data, msg } = result\r\n    if (status === 0) {\r\n      this.setState({\r\n        userList: data.users.reverse(),\r\n        roleList: data.roles,\r\n        isShowModal: false,\r\n      })\r\n    } else message.error(msg, 1)\r\n  }\r\n\r\n  // 添加或者修改用户\r\n  addAndUpdateUser = async (values) => {\r\n    let { operaType, currentUserId } = this.state\r\n    let result\r\n    if (operaType === 'add') result = await postAddUser(values)\r\n    else result = await postUpdateUser({ ...values, _id: currentUserId })\r\n    let { status, msg } = result\r\n    if (status === 0) {\r\n      this.getUsers()\r\n      message.success('操作成功', 1)\r\n    } else message.error(msg, 1)\r\n  }\r\n\r\n  // 点击删除后的回调\r\n  deleteUser = (userId) => {\r\n    confirm({\r\n      title: '确定删除?',\r\n      icon: <ExclamationCircleOutlined />,\r\n      content: '若删除,该用户将无法使用该平台',\r\n      cancelText: '取消',\r\n      okText: '确认',\r\n      onOk: async () => {\r\n        let result = await postDeleteUser(userId)\r\n        const { status, msg } = result\r\n        if (status === 0) {\r\n          message.success('删除用户成功', 1)\r\n          this.getUsers()\r\n        } else message.error(msg, 1)\r\n      },\r\n    })\r\n  }\r\n  render() {\r\n    let { isShowModal, userList, operaType } = this.state\r\n    const columns = [\r\n      {\r\n        title: '用户名',\r\n        dataIndex: 'username',\r\n        key: 'username',\r\n      },\r\n      {\r\n        title: '邮箱',\r\n        dataIndex: 'email',\r\n        key: 'email',\r\n      },\r\n      {\r\n        title: '电话',\r\n        dataIndex: 'phone',\r\n        key: 'phone',\r\n      },\r\n      {\r\n        title: '注册时间',\r\n        dataIndex: 'create_time',\r\n        key: 'create_time',\r\n        render: (create_time) =>\r\n          dayjs(create_time).format('YYYY年 MM月DD日 HH:mm:ss'),\r\n      },\r\n      {\r\n        title: '所属角色',\r\n        dataIndex: 'role_id',\r\n        key: 'role_id',\r\n        render: (role_id) => {\r\n          let role = this.state.roleList.find((item) => item._id === role_id)\r\n          return role && role.name\r\n        },\r\n      },\r\n      {\r\n        title: '操作',\r\n        key: 'operation',\r\n        render: (user) => (\r\n          <div>\r\n            <Button\r\n              type=\"link\"\r\n              // 显示修改角色的模态框，并让数据回显\r\n              onClick={() => {\r\n                this.setState(\r\n                  {\r\n                    isShowModal: true,\r\n                    operaType: 'update',\r\n                    currentUserId: user._id,\r\n                  },\r\n                  () => {\r\n                    this.userFormRef.current.setFieldsValue({...user,password:''})\r\n                  }\r\n                )\r\n              }}\r\n            >\r\n              修改\r\n            </Button>\r\n            <Button\r\n              type=\"link\"\r\n              onClick={() => {\r\n                this.deleteUser(user._id)\r\n              }}\r\n            >\r\n              删除\r\n            </Button>\r\n          </div>\r\n        ),\r\n        align: 'center',\r\n      },\r\n    ]\r\n    return (\r\n      <div>\r\n        <Card\r\n          title=\"角色操作\"\r\n          extra={\r\n            <Button\r\n              type=\"primary\"\r\n              icon={<PlusCircleOutlined />}\r\n              // 显示添加角色的模态框\r\n              onClick={() => {\r\n                this.setState({ isShowModal: true, operaType: 'add' }, () => {\r\n                  this.userFormRef.current.resetFields()\r\n                })\r\n              }}\r\n            >\r\n              创建用户\r\n            </Button>\r\n          }\r\n        >\r\n          <Table\r\n            dataSource={userList}\r\n            columns={columns}\r\n            bordered\r\n            rowKey=\"_id\"\r\n            pagination={{ pageSize: PAGE_SIZE, showQuickJumper: true }}\r\n          />\r\n        </Card>\r\n        <Modal\r\n          // 控制模态框标题是修改还是添加\r\n          title={operaType === 'update' ? '修改用户' : '添加用户'}\r\n          visible={isShowModal}\r\n          // 用户模态框点击确认后的回调\r\n          onOk={() => {\r\n            this.userFormRef.current.submit()\r\n          }}\r\n          // 用户模态框点击取消后的回调\r\n          onCancel={() => {\r\n            this.setState({ isShowModal: false })\r\n          }}\r\n          okText=\"确认\"\r\n          cancelText=\"取消\"\r\n        >\r\n          <Form\r\n            ref={this.userFormRef}\r\n            //用户模态框里面的表单提交之后校验成功之后的回调\r\n            onFinish={this.addAndUpdateUser}\r\n            //用户模态框里面的表单提交之后校验失败之后的回调\r\n            onFinishFailed={() => {\r\n              message.warn('用户信息输入不正确，请检查！', 1)\r\n            }}\r\n            labelCol={{ span: 4 }}\r\n            wrapperCol={{ span: 19 }}\r\n          >\r\n            <Item\r\n              label=\"用户名\"\r\n              name=\"username\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: '请输入你的用户名!',\r\n                },\r\n                {\r\n                  max: 13,\r\n                  message: '用户名不能超过13位!',\r\n                },\r\n                {\r\n                  min: 4,\r\n                  message: '用户名不能低于4位!',\r\n                },\r\n                {\r\n                  pattern: /^\\w+$/,\r\n                  message: '用户名必须是数字、字母、下划线!',\r\n                },\r\n              ]}\r\n            >\r\n              <Input placeholder=\"请输入用户名\" />\r\n            </Item>\r\n            <Item\r\n              label=\"密码\"\r\n              name=\"password\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: '请输入你的密码!',\r\n                },\r\n                {\r\n                  max: 13,\r\n                  message: '密码不能超过13位!',\r\n                },\r\n                {\r\n                  min: 4,\r\n                  message: '密码不能低于4位!',\r\n                },\r\n                {\r\n                  pattern: /^\\w+$/,\r\n                  message: '密码必须是数字、字母、下划线!',\r\n                },\r\n              ]}\r\n            >\r\n              <Input type=\"password\" placeholder=\"请输入密码\" />\r\n            </Item>\r\n            <Item\r\n              label=\"手机号\"\r\n              name=\"phone\"\r\n              rules={[\r\n                {\r\n                  pattern: /^1[3456789]\\d{9}$/,\r\n                  message: '手机号格式不正确!',\r\n                },\r\n              ]}\r\n            >\r\n              <Input placeholder=\"请输入手机号\" />\r\n            </Item>\r\n            <Item\r\n              label=\"邮箱\"\r\n              name=\"email\"\r\n              rules={[\r\n                {\r\n                  pattern: /^[a-zA-Z0-9_]{4,20}@[a-zA-Z0-9]{2,10}\\.com$/,\r\n                  message: '邮箱格式不正确',\r\n                },\r\n              ]}\r\n            >\r\n              <Input placeholder=\"请输入邮箱\" />\r\n            </Item>\r\n            <Item\r\n              label=\"角色\"\r\n              name=\"role_id\"\r\n              rules={[{ required: true, message: '请选择一个角色' }]}\r\n              initialValue=\"\"\r\n            >\r\n              <Select>\r\n                <Option value=\"\">请选择角色</Option>\r\n                {this.state.roleList.map((item) => {\r\n                  return (\r\n                    <Option key={item._id} value={item._id}>\r\n                      {item.name}\r\n                    </Option>\r\n                  )\r\n                })}\r\n              </Select>\r\n            </Item>\r\n          </Form>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Form, Input, Button, Card, Table, message, Modal, Tree } from 'antd'\r\nimport { PlusCircleOutlined, LinkOutlined } from '@ant-design/icons'\r\nimport { connect } from 'react-redux'\r\nimport dayjs from 'dayjs'\r\nimport { getRoleList, postAddRole, postUpdateRole } from '../../api'\r\nimport { menuList } from '../../config/menu_config'\r\nimport { PAGE_SIZE } from '../../config'\r\n\r\n\r\n@connect((state) => ({ auth_name: state.userInfo.user.username }))\r\nclass Role extends Component {\r\n  addRoleFormRef = React.createRef()\r\n  state = {\r\n    isAddRole: false,\r\n    isSetAuth: false,\r\n    roleList: [],\r\n    treeData: [\r\n      {\r\n        title: '平台功能',\r\n        key: 'top',\r\n        children: menuList,\r\n      },\r\n    ],\r\n    checkedKeys: [],\r\n    currentId: '',\r\n  }\r\n  // 一上来就查找角色列表\r\n  componentDidMount() {\r\n    this.getRoles()\r\n  }\r\n\r\n  // 向服务器查找角色列表\r\n  getRoles = async () => {\r\n    let result = await getRoleList()\r\n    const { status, data, msg } = result\r\n    if (status === 0) this.setState({ roleList: data.reverse(), isSetAuth: false })\r\n    else message.error(msg, 1) \r\n  }\r\n  //向服务器添加角色信息\r\n  addRole = async (roleName) => {\r\n    let result = await postAddRole(roleName)\r\n    const { status, data, msg } = result\r\n    if (status === 0) {\r\n      let roleList = [...this.state.roleList]\r\n      roleList.unshift(data)\r\n      this.setState({ isAddRole: false, roleList })\r\n      message.success('添加角色成功', 1)\r\n    } else message.error(msg, 1)\r\n  }\r\n  // 显示设置权限的模态框\r\n  showSetAuth = (currentId) => {\r\n    let { roleList } = this.state\r\n    let currentRole = roleList.find((item) => item._id === currentId)\r\n    this.setState({\r\n      isSetAuth: true,\r\n      currentId,\r\n      checkedKeys: currentRole.menus,\r\n    })\r\n  }\r\n  //设置角色权限模态框点击确认之后的回调\r\n  setAuthHandleOk = async () => {\r\n    let { currentId, checkedKeys } = this.state\r\n    let { auth_name } = this.props\r\n    let result = await postUpdateRole({\r\n      _id: currentId,\r\n      menus: checkedKeys,\r\n      auth_name,\r\n    })\r\n    const { status, msg } = result\r\n    if (status === 0) {\r\n      this.getRoles()\r\n      message.success('设置角色权限成功！', 1)\r\n    } else message.error(msg, 1)\r\n  }\r\n  render() {\r\n    let { isAddRole, isSetAuth, roleList, treeData, checkedKeys } = this.state\r\n\r\n    const columns = [\r\n      {\r\n        title: '角色名称',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n      },\r\n      {\r\n        title: '创建时间',\r\n        dataIndex: 'create_time',\r\n        key: 'create_time',\r\n        render: (create_time) =>\r\n          dayjs(create_time).format('YYYY年 MM月DD日 HH:mm:ss'),\r\n      },\r\n      {\r\n        title: '授权时间',\r\n        dataIndex: 'auth_time',\r\n        key: 'auth_time',\r\n        render: (auth_time) =>\r\n          auth_time ? dayjs(auth_time).format('YYYY年 MM月DD日 HH:mm:ss') : '',\r\n      },\r\n      {\r\n        title: '授权人',\r\n        dataIndex: 'auth_name',\r\n        key: 'auth_name',\r\n      },\r\n      {\r\n        title: '操作',\r\n        dataIndex: '_id',\r\n        key: 'operation',\r\n        render: (currentId) => (\r\n          <Button\r\n            type=\"link\"\r\n            onClick={() => {\r\n              this.showSetAuth(currentId)\r\n            }}\r\n          >\r\n            设置权限\r\n          </Button>\r\n        ),\r\n        width: '15%',\r\n        align: 'center',\r\n      },\r\n    ]\r\n    return (\r\n      <div>\r\n        <Card\r\n          title=\"角色操作\"\r\n          extra={\r\n            <Button\r\n              type=\"primary\"\r\n              icon={<PlusCircleOutlined />}\r\n              onClick={() => {\r\n                //显示角色添加的模态框\r\n                this.setState({ isAddRole: true }, () => {\r\n                  this.addRoleFormRef.current.resetFields()\r\n                })\r\n              }}\r\n            >\r\n              添加角色\r\n            </Button>\r\n          }\r\n        >\r\n          <Table\r\n            dataSource={roleList}\r\n            columns={columns}\r\n            bordered\r\n            rowKey=\"_id\"\r\n            pagination={{ pageSize: PAGE_SIZE, showQuickJumper: true }}\r\n          />\r\n        </Card>\r\n        <Modal\r\n          title=\"添加角色\"\r\n          visible={isAddRole}\r\n          // 添加角色模态框点击确认后的回调\r\n          onOk={() => {\r\n            this.addRoleFormRef.current.submit()\r\n          }}\r\n          // 添加角色模态框点击取消后的回调\r\n          onCancel={() => {\r\n            this.setState({ isAddRole: false })\r\n          }}\r\n          okText=\"确认\"\r\n          cancelText=\"取消\"\r\n        >\r\n          <Form\r\n            ref={this.addRoleFormRef}\r\n            //添加角色模态框里面的表单提交之后校验成功之后的回调\r\n            onFinish={(values) => {\r\n              this.addRole(values.roleName)\r\n            }}\r\n            //添加角色模态框里面的表单提交之后校验失败之后的回调\r\n            onFinishFailed={() => {\r\n              message.warn('角色信息输入不正确，请检查！', 1)\r\n            }}\r\n          >\r\n            <Form.Item\r\n              name=\"roleName\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: '角色名不能为空！',\r\n                },\r\n              ]}\r\n            >\r\n              <Input placeholder=\"请输入角色名\" />\r\n            </Form.Item>\r\n          </Form>\r\n        </Modal>\r\n        <Modal\r\n          title=\"设置角色权限\"\r\n          visible={isSetAuth}\r\n          onOk={this.setAuthHandleOk}\r\n          //设置角色权限模态框点击取消之后的回调\r\n          onCancel={() => {\r\n            this.setState({ isSetAuth: false })\r\n          }}\r\n          okText=\"确认\"\r\n          cancelText=\"取消\"\r\n        >\r\n          <Tree\r\n            checkable\r\n            onCheck={(checkedKeys) => {\r\n              this.setState({ checkedKeys })\r\n            }}\r\n            checkedKeys={checkedKeys}\r\n            treeData={treeData}\r\n            defaultExpandAll\r\n            icon={<LinkOutlined />}\r\n            showIcon\r\n          />\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Role\r\n","import React, {Component} from 'react'\r\nimport {Card, Button} from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\n/*\r\n后台管理的柱状图路由组件\r\n */\r\nexport default class Bar extends Component {\r\n  state = {\r\n    sales: [5, 20, 36, 10, 10, 20],\r\n    inventorys: [15, 30, 46, 20, 20, 40]\r\n  }\r\n  getOption = () => {\r\n    const {sales, inventorys} = this.state\r\n    return { // 配置对象\r\n      title: {\r\n          text: 'ECharts 入门示例'\r\n      },\r\n      tooltip: {},\r\n      legend: {\r\n          data:['销量', '库存']\r\n      },\r\n      xAxis: {\r\n          data: [\"衬衫\",\"羊毛衫\",\"雪纺衫\",\"裤子\",\"高跟鞋\",\"袜子\"]\r\n      },\r\n      yAxis: {},\r\n      series: [{\r\n          name: '销量',\r\n          type: 'bar',\r\n          data: sales\r\n      },{\r\n          name: '库存',\r\n          type: 'bar',\r\n          data: inventorys\r\n      }]\r\n  };\r\n  }\r\n\r\n  update = () => {\r\n    const sales = this.state.sales.map(sale => sale + 1)\r\n    const inventorys = this.state.inventorys.map(inventory => inventory -1)\r\n    \r\n    this.setState({\r\n      sales,\r\n      inventorys\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Button type='primary' onClick={this.update}>更新</Button>\r\n        </Card>\r\n\r\n        <Card title='柱状图一'>\r\n          <ReactEcharts option={this.getOption()} style={{height: 300}}/>\r\n        </Card>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport {Card, Button} from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\n/*\r\n后台管理的柱状图路由组件\r\n */\r\nexport default class Line extends Component {\r\n  state = {\r\n    sales: [5, 20, 36, 10, 10, 20],\r\n    inventorys: [15, 30, 46, 20, 20, 40]\r\n  }\r\n  getOption = () => {\r\n    const {sales, inventorys} = this.state\r\n    return { // 配置对象\r\n      title: {\r\n          text: 'ECharts 入门示例'\r\n      },\r\n      tooltip: {},\r\n      legend: {\r\n          data:['销量', '库存']\r\n      },\r\n      xAxis: {\r\n          data: [\"衬衫\",\"羊毛衫\",\"雪纺衫\",\"裤子\",\"高跟鞋\",\"袜子\"]\r\n      },\r\n      yAxis: {},\r\n      series: [{\r\n          name: '销量',\r\n          type: 'line',\r\n          data: sales\r\n      },{\r\n          name: '库存',\r\n          type: 'line',\r\n          data: inventorys\r\n      }]\r\n  };\r\n  }\r\n\r\n  update = () => {\r\n    const sales = this.state.sales.map(sale => sale + 1)\r\n    const inventorys = this.state.inventorys.map(inventory => inventory -1)\r\n    \r\n    this.setState({\r\n      sales,\r\n      inventorys\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Button type='primary' onClick={this.update}>更新</Button>\r\n        </Card>\r\n\r\n        <Card title='柱状图一'>\r\n          <ReactEcharts option={this.getOption()} style={{height: 300}}/>\r\n        </Card>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport { Card } from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\n/*\r\n后台管理的柱状图路由组件\r\n */\r\nexport default class Pie extends Component {\r\n  getOption = () => {\r\n    return {\r\n      title: {\r\n        text: '某站点用户访问来源',\r\n        subtext: '纯属虚构',\r\n        x: 'center',\r\n      },\r\n      tooltip: {\r\n        trigger: 'item',\r\n        formatter: '{a} <br/>{b} : {c} ({d}%)',\r\n      },\r\n      legend: {\r\n        orient: 'vertical',\r\n        left: 'left',\r\n        data: ['直接访问', '邮件营销', '联盟广告', '视频广告', '搜索引擎'],\r\n      },\r\n      series: [\r\n        {\r\n          name: '访问来源',\r\n          type: 'pie',\r\n          radius: '55%',\r\n          center: ['50%', '60%'],\r\n          data: [\r\n            { value: 335, name: '直接访问' },\r\n            { value: 310, name: '邮件营销' },\r\n            { value: 234, name: '联盟广告' },\r\n            { value: 135, name: '视频广告' },\r\n            { value: 1548, name: '搜索引擎' },\r\n          ],\r\n          itemStyle: {\r\n            emphasis: {\r\n              shadowBlur: 10,\r\n              shadowOffsetX: 0,\r\n              shadowColor: 'rgba(0, 0, 0, 0.5)',\r\n            },\r\n          },\r\n        },\r\n      ],\r\n    }\r\n  }\r\n\r\n  getOption2 = () => {\r\n    return {\r\n      backgroundColor: '#2c343c',\r\n\r\n      title: {\r\n        text: 'Customized Pie',\r\n        left: 'center',\r\n        top: 20,\r\n        textStyle: {\r\n          color: '#ccc',\r\n        },\r\n      },\r\n\r\n      tooltip: {\r\n        trigger: 'item',\r\n        formatter: '{a} <br/>{b} : {c} ({d}%)',\r\n      },\r\n\r\n      visualMap: {\r\n        show: false,\r\n        min: 80,\r\n        max: 600,\r\n        inRange: {\r\n          colorLightness: [0, 1],\r\n        },\r\n      },\r\n      series: [\r\n        {\r\n          name: '访问来源',\r\n          type: 'pie',\r\n          radius: '55%',\r\n          center: ['50%', '50%'],\r\n          data: [\r\n            { value: 335, name: '直接访问' },\r\n            { value: 310, name: '邮件营销' },\r\n            { value: 274, name: '联盟广告' },\r\n            { value: 235, name: '视频广告' },\r\n            { value: 400, name: '搜索引擎' },\r\n          ].sort(function (a, b) {\r\n            return a.value - b.value\r\n          }),\r\n          roseType: 'radius',\r\n          label: {\r\n            normal: {\r\n              textStyle: {\r\n                color: 'rgba(255, 255, 255, 0.3)',\r\n              },\r\n            },\r\n          },\r\n          labelLine: {\r\n            normal: {\r\n              lineStyle: {\r\n                color: 'rgba(255, 255, 255, 0.3)',\r\n              },\r\n              smooth: 0.2,\r\n              length: 10,\r\n              length2: 20,\r\n            },\r\n          },\r\n          itemStyle: {\r\n            normal: {\r\n              color: '#c23531',\r\n              shadowBlur: 200,\r\n              shadowColor: 'rgba(0, 0, 0, 0.5)',\r\n            },\r\n          },\r\n\r\n          animationType: 'scale',\r\n          animationEasing: 'elasticOut',\r\n          animationDelay: function (idx) {\r\n            return Math.random() * 200\r\n          },\r\n        },\r\n      ],\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card title=\"饼图一\">\r\n          <ReactEcharts option={this.getOption()} style={{ height: 300 }} />\r\n        </Card>\r\n        <Card title=\"饼图一\">\r\n          <ReactEcharts option={this.getOption2()} style={{ height: 300 }} />\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.060d503d.png\";","// 引入的库\r\nimport React, { Component } from 'react'\r\nimport { Route, Switch, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { Layout } from 'antd'\r\nimport { ClusterOutlined } from '@ant-design/icons'\r\n\r\n// 自己的组件\r\nimport LeftNav from './left_nav/left_nav'\r\nimport Header from './header/header'\r\nimport TimeAndWeather from './time_weather/time_weather'\r\nimport Home from '../../components/home/home'\r\nimport Category from '../category/category'\r\nimport Product from '../product/product'\r\nimport Detail from '../product/detail'\r\nimport AddAndUpdate from '../product/add_update'\r\nimport User from '../user/user'\r\nimport Role from '../role/role'\r\nimport Bar from '../../components/bar/bar'\r\nimport Line from '../../components/line/line'\r\nimport Pie from '../../components/pie/pie'\r\n\r\n// 引入的配置\r\nimport { menuList } from '../../config/menu_config.jsx'\r\n// 静态资源\r\nimport logo from '../../static/images/logo.png'\r\nimport './css/admin.less'\r\n\r\nconst { Footer, Sider, Content } = Layout\r\n\r\n@connect((state) => ({\r\n  userInfo: state.userInfo,\r\n  titlefromredux: state.title,\r\n}))\r\nclass Admin extends Component {\r\n  state = {\r\n    collapsed: false,\r\n    title: '',\r\n  }\r\n  componentDidMount() {\r\n    this.getTitleFromMenu()\r\n  }\r\n\r\n  onCollapse = (collapsed) => {\r\n    this.setState({ collapsed })\r\n  }\r\n\r\n  getTitleFromMenu = () => {\r\n    let { pathname } = this.props.location\r\n    let pathKey = pathname.split('/').reverse()[0]\r\n    if (pathname.split('/').indexOf('product') !== -1) pathKey = 'product'\r\n    if (pathKey === 'admin') pathKey = 'home'\r\n    let title = ''\r\n    menuList.forEach((item) => {\r\n      if (item.children instanceof Array) {\r\n        let tmp = item.children.find((citem) => {\r\n          return citem.key === pathKey\r\n        })\r\n        if (tmp) title = tmp.title\r\n      } else {\r\n        if (pathKey === item.key) title = item.title\r\n      }\r\n    })\r\n    this.setState({ title })\r\n  }\r\n  render() {\r\n    let { collapsed, title } = this.state\r\n    let { titlefromredux, userInfo } = this.props\r\n    let { isLogin } = userInfo\r\n    if (!isLogin) {\r\n      return <Redirect to=\"/login\" />\r\n    }\r\n    return (\r\n      <Layout className=\"admin\">\r\n        <Sider\r\n          className=\"sider\"\r\n          collapsible\r\n          collapsed={collapsed}\r\n          onCollapse={this.onCollapse}\r\n        >\r\n          <header className=\"nav-header\">\r\n            <img src={logo} alt=\"\" />\r\n            <h1 style={{ visibility: collapsed ? 'hidden' : 'visible' }}>\r\n              后台管理\r\n            </h1>\r\n          </header>\r\n          <LeftNav />\r\n        </Sider>\r\n        <Layout>\r\n          <Header className=\"header\" />\r\n          <Content className=\"content\">\r\n            <div className=\"content-header\">\r\n              <div className=\"content-header-left\">\r\n                <h1>\r\n                  <span className=\"title-icon\">\r\n                    {\r\n                      <ClusterOutlined\r\n                        style={{ fontSize: '20px', color: '#13c2c2' }}\r\n                      />\r\n                    }\r\n                  </span>\r\n                  {titlefromredux || title}\r\n                </h1>\r\n              </div>\r\n              <TimeAndWeather />\r\n            </div>\r\n            <div className=\"content-main\">\r\n              <Switch>\r\n                <Route path=\"/admin\" component={Home} exact />\r\n                <Route path=\"/admin/home\" component={Home} exact />\r\n                <Route\r\n                  path=\"/admin/prod_about/category\"\r\n                  component={Category}\r\n                  exact\r\n                />\r\n                <Route\r\n                  path=\"/admin/prod_about/product\"\r\n                  component={Product}\r\n                  exact\r\n                />\r\n                <Route\r\n                  path=\"/admin/prod_about/product/add_update\"\r\n                  component={AddAndUpdate}\r\n                  exact\r\n                />\r\n                <Route\r\n                  path=\"/admin/prod_about/product/add_update/:_id\"\r\n                  component={AddAndUpdate}\r\n                  exact\r\n                />\r\n                <Route\r\n                  path=\"/admin/prod_about/product/detail/:_id\"\r\n                  component={Detail}\r\n                  exact\r\n                />\r\n                <Route path=\"/admin/user\" component={User} exact />\r\n                <Route path=\"/admin/role\" component={Role} exact />\r\n                <Route path=\"/admin/charts/bar\" component={Bar} exact />\r\n                <Route path=\"/admin/charts/line\" component={Line} exact />\r\n                <Route path=\"/admin/charts/pie\" component={Pie} exact />\r\n                <Redirect to=\"/not_found\" />\r\n              </Switch>\r\n            </div>\r\n          </Content>\r\n\r\n          <Footer className=\"footer\">\r\n            推荐使用谷歌浏览器，以获取最佳的用户体验\r\n          </Footer>\r\n        </Layout>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Admin\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { Form, Input, Button, Checkbox, message } from 'antd'\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons'\r\nimport { CreateUserInfoToStateAction } from '../../redux/action_creators/login_action'\r\nimport { postLogin } from '../../api/index'\r\nimport logo from '../../static/images/logo.png'\r\nimport './css/login.less'\r\nconst { Item } = Form\r\n\r\n@connect((state) => ({ isLogin: state.userInfo.isLogin }), {\r\n  saveUserInfo: CreateUserInfoToStateAction,\r\n})\r\nclass Login extends Component {\r\n  onFinish = async (values) => {\r\n    // console.log('Received values of form: ', values)\r\n    let { history, saveUserInfo } = this.props\r\n    let result = await postLogin(values)\r\n    let { status, data, msg } = result\r\n    if (status === 0) {\r\n      saveUserInfo({ data, remember: values.remember })\r\n      history.replace('/admin/home')\r\n    } else {\r\n      message.warn(msg, 1)\r\n    }\r\n  }\r\n  onFinishFailed = () => {\r\n    message.warn(\"用户名或密码格式不正确\", 1)\r\n  }\r\n  pwdValidator = (rule, value, callback) => {\r\n    if (value === '') {\r\n      callback('请输入你的密码!')\r\n    } else if (value.length < 4) {\r\n      callback('密码不能低于4位！')\r\n    } else if (value.length > 13) {\r\n      callback('密码不能超过13位！')\r\n    } else if (!/^\\w+$/.test(value)) {\r\n      callback('密码必须是数字、字母、下划线！')\r\n    } else {\r\n      callback()\r\n    }\r\n  }\r\n  forgetpwd = (e) => {\r\n    e.preventDefault()\r\n    message.success('亲亲，您没有权限哦，请联系管理员', 1)\r\n  }\r\n\r\n  render() {\r\n    let { isLogin } = this.props\r\n    if (isLogin) {\r\n      return <Redirect to=\"/admin\" />\r\n    }\r\n    return (\r\n      <div className=\"login\">\r\n        <header>\r\n          <img src={logo} alt=\"logo\"/>\r\n          <h1>商品管理系统</h1>\r\n        </header>\r\n        <div className=\"bg_img\"></div>\r\n        <div className=\"bg_mask\"></div>\r\n        <section>\r\n          <div className=\"form_mask\"></div>\r\n          <Form\r\n            name=\"normal_login\"\r\n            className=\"login-form\"\r\n            initialValues={{\r\n              remember: true,\r\n            }}\r\n            onFinish={this.onFinish}\r\n            onFinishFailed = {this.onFinishFailed}\r\n          >\r\n            <Item\r\n              name=\"username\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: '请输入你的用户名!',\r\n                },\r\n                {\r\n                  max: 13,\r\n                  message: '用户名不能超过13位!',\r\n                },\r\n                {\r\n                  min: 4,\r\n                  message: '用户名不能低于4位!',\r\n                },\r\n                {\r\n                  pattern: /^\\w+$/,\r\n                  message: '用户名必须是数字、字母、下划线!',\r\n                },\r\n              ]}\r\n            >\r\n              <Input\r\n                prefix={\r\n                  <UserOutlined\r\n                    className=\"site-form-item-icon\"\r\n                    style={{ color: 'rgba(0,0,0,.25)' }}\r\n                  />\r\n                }\r\n                placeholder=\" 用户名\"\r\n              />\r\n            </Item>\r\n\r\n            <Item\r\n              name=\"password\"\r\n              rules={[\r\n                {\r\n                  validator: this.pwdValidator,\r\n                },\r\n              ]}\r\n            >\r\n              <Input\r\n                prefix={\r\n                  <LockOutlined\r\n                    className=\"site-form-item-icon\"\r\n                    style={{ color: 'rgba(0,0,0,.25)' }}\r\n                  />\r\n                }\r\n                type=\"password\"\r\n                placeholder=\" 密码\"\r\n              />\r\n            </Item>\r\n            <Item>\r\n              <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n                <Checkbox>记住我</Checkbox>\r\n              </Form.Item>\r\n\r\n              <a\r\n                className=\"login-form-forgot\"\r\n                href=\"#1\"\r\n                onClick={this.forgetpwd}\r\n              >\r\n                忘记密码\r\n              </a>\r\n            </Item>\r\n\r\n            <Item>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                className=\"login-form-button\"\r\n              >\r\n                登录\r\n              </Button>\r\n            </Item>\r\n          </Form>\r\n        </section>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Login\r\n","import { Button } from 'antd'\r\nimport React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { HomeOutlined } from '@ant-design/icons'\r\nimport './css/not_found.less'\r\nexport default class NotFound extends Component {\r\n  render() {    \r\n    if (this.props.location.pathname === '/') {\r\n      return <Redirect to=\"/admin/home\" />\r\n    } else {\r\n      return (\r\n        <div className=\"not-found\">\r\n          <Button\r\n            type=\"primary\"\r\n            size=\"large\"\r\n            icon={<HomeOutlined />}\r\n            className=\"btn\"\r\n            onClick={() => {\r\n              this.props.history.replace('/admin/home')\r\n            }}\r\n          >\r\n            Back to home page\r\n          </Button>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n","import React,{Component} from 'react'\n\nimport {Route,Switch} from 'react-router-dom'\nimport Admin from './containers/admin/admin.jsx'\nimport Login from './containers/login/login.jsx'\nimport NotFound from './components/not-found/not_found'\n\nexport default class App extends Component{\n  render(){\n    return (\n      <div className='app'>\n        <Switch>\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/admin\" component={Admin} />\n          <Route path='/' component={NotFound}/>\n        </Switch>\n      </div>\n    )\n  }\n}\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom'\nimport {Provider} from 'react-redux'\nimport store from './redux/store'\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}